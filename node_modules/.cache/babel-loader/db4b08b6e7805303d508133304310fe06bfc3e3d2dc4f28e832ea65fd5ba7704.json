{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oburn\\\\projects\\\\job-search-fe\\\\src\\\\pages\\\\JobDetail.js\",\n  _s = $RefreshSig$();\nimport { json, redirect } from 'react-router-dom';\nimport JobItem from '../components/JobItem';\nimport JobsList from '../components/JobsList';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobDetailPage() {\n  _s();\n  let job;\n  useEffect(() => {\n    job = loadJob();\n    console.log(\"jobs page is being rendered\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(JobItem, {\n    job: job\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n}\n_s(JobDetailPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = JobDetailPage;\nexport default JobDetailPage;\nasync function loadJob(id) {\n  const response = await fetch('http://localhost:8080/job/get');\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected job.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.job;\n  }\n}\nexport async function action(_ref) {\n  let {\n    params,\n    request\n  } = _ref;\n  const jobId = params.jobId;\n  const response = await fetch('http://localhost:8080/job/get', {\n    method: request.method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(jobId)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'The action could not be completed.'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"JobDetailPage\");","map":{"version":3,"names":["json","redirect","JobItem","JobsList","useEffect","JobDetailPage","job","loadJob","console","log","id","response","fetch","ok","message","status","resData","action","params","request","jobId","method","headers","body","JSON","stringify"],"sources":["C:/Users/oburn/projects/job-search-fe/src/pages/JobDetail.js"],"sourcesContent":["import {\n  json,\n  redirect,\n} from 'react-router-dom';\n\nimport JobItem from '../components/JobItem';\nimport JobsList from '../components/JobsList';\nimport {useEffect} from \"react\";\n\nfunction JobDetailPage() {\n  let job;\n\n  useEffect(() => {\n    job = loadJob();\n    console.log(\"jobs page is being rendered\");\n  }, [] );\n\n  return (\n      <JobItem job={job} />\n  );\n}\n\nexport default JobDetailPage;\n\nasync function loadJob(id) {\n  const response = await fetch('http://localhost:8080/job/get');\n\n  if (!response.ok) {\n    throw json(\n      { message: 'Could not fetch details for selected job.' },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.job;\n  }\n}\n\n\nexport async function action({ params, request }) {\n  const jobId = params.jobId;\n  const response = await fetch('http://localhost:8080/job/get',{\n    method: request.method,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(jobId)\n  });\n\n  if (!response.ok) {\n    throw json(\n      { message: 'The action could not be completed.' },\n      {\n        status: 500,\n      }\n    );\n  }\n}\n"],"mappings":";;AAAA,SACEA,IAAI,EACJC,QAAQ,QACH,kBAAkB;AAEzB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAAQC,SAAS,QAAO,OAAO;AAAC;AAEhC,SAASC,aAAa,GAAG;EAAA;EACvB,IAAIC,GAAG;EAEPF,SAAS,CAAC,MAAM;IACdE,GAAG,GAAGC,OAAO,EAAE;IACfC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAE;EAEP,oBACI,QAAC,OAAO;IAAC,GAAG,EAAEH;EAAI;IAAA;IAAA;IAAA;EAAA,QAAG;AAE3B;AAAC,GAXQD,aAAa;AAAA,KAAbA,aAAa;AAatB,eAAeA,aAAa;AAE5B,eAAeE,OAAO,CAACG,EAAE,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAE7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMb,IAAI,CACR;MAAEc,OAAO,EAAE;IAA4C,CAAC,EACxD;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACX,IAAI,EAAE;IACrC,OAAOgB,OAAO,CAACV,GAAG;EACpB;AACF;AAGA,OAAO,eAAeW,MAAM,OAAsB;EAAA,IAArB;IAAEC,MAAM;IAAEC;EAAQ,CAAC;EAC9C,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAAK;EAC1B,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAC;IAC3DS,MAAM,EAAEF,OAAO,CAACE,MAAM;IACtBC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,KAAK;EAC5B,CAAC,CAAC;EAEF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMb,IAAI,CACR;MAAEc,OAAO,EAAE;IAAqC,CAAC,EACjD;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH;AACF;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}