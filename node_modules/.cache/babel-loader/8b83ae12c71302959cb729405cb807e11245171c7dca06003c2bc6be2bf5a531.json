{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oburn\\\\projects\\\\job-search-fe\\\\src\\\\pages\\\\JobDetail.js\",\n  _s = $RefreshSig$();\nimport JobItem from '../components/JobItem';\nimport { useQuery } from 'react-query';\nimport JobService from '../services/JobService';\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport JobsList from \"../components/JobsList\";\nimport { useEffect, useState } from \"react\";\nimport { render } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function JobDetailPage() {\n  _s();\n  //const jobId = useParams();\n\n  //console.log(jobId);\n\n  //const JOBSEARCH_BASE_URL = \"http://localhost:8080/job\";\n\n  //const { data: jobData } = useQuery('job', () => JobService.getJobById(jobId));\n  //  const { data: jobData, isLoading: isLoadingJob} = useQuery('asdf',\n  //      async () => { await axios.get(\"http://localhost:8080/job/get/\" + jobId)\n  //                         .then(response => {\n  //                          console.log(response)\n  //                          return response;})})\n\n  //the below line was working\n  // const { data: jobDetail, isLoading: isLoadingJob } = useQuery('asdf',\n  //     async () => { await axios.get(\"http://localhost:8080/job/get/2\")\n  //         .then(res => {return res})});\n\n  // const jobDetail = await fetch(\"http://localhost:8080/job/get/\" + jobId);\n\n  // const jobDetail = isLoadingJob ? [] : jobData;\n  // let jobDetail;\n  //\n  // if(isLoadingJob) {\n  //     jobDetail = [];\n  // } else {\n  //     jobDetail = getData(jobData);\n  // }\n\n  //let result = axios.get(JOBSEARCH_BASE_URL + \"/get/\" + jobId)\n\n  // async function getData() {\n  //         jobData = await axios.get(JOBSEARCH_BASE_URL + \"/get/\" + jobId)\n  //         .then(response => {\n  //             console.log(response)\n  //             return response;\n  //         })\n  //         .catch(error => {\n  //             console.log(error)\n  //         })\n  // }\n\n  //let jobDetail;\n\n  // axios.get(\"http://localhost:8080/job/get/2\")\n  //     .then(response => response.json())\n  //     .then((data) => {\n  //         jobDetail = data;\n  //     });\n\n  // let jobDetail;\n  //\n  // useEffect(async () => {\n  //     jobDetail = axios.get(\"http://localhost:8080/job/get/2\")\n  //         .catch(() => {\n  //             console.log(\"fail\");\n  //         });\n  // })\n\n  //console.log(jobDetail);\n\n  // if (!jobDetail) {\n  //     return <div>Loading...</div>;\n  // }\n\n  //return <JobItem job={jobDetail}/>;\n\n  const [Posts, setPosts] = useState(null);\n  let renderPosts;\n  renderPosts = async () => {\n    try {\n      const res = await axios.get('http://localhost:8080/job/get/2');\n      const posts = res.data;\n      setPosts(posts);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const posts = Posts === null || Posts === void 0 ? void 0 : Posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"list-group-item\",\n    children: post.text\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 13\n  }, this);\n}\n_s(JobDetailPage, \"7KMFAeUuBEe+98Gqr47qJ29Wacg=\");\n_c = JobDetailPage;\nexport default JobDetailPage;\nvar _c;\n$RefreshReg$(_c, \"JobDetailPage\");","map":{"version":3,"names":["JobItem","useQuery","JobService","useParams","axios","JobsList","useEffect","useState","render","JobDetailPage","Posts","setPosts","renderPosts","res","get","posts","data","err","console","log","map","post","i","text"],"sources":["C:/Users/oburn/projects/job-search-fe/src/pages/JobDetail.js"],"sourcesContent":["import JobItem from '../components/JobItem';\nimport { useQuery } from 'react-query';\nimport JobService from '../services/JobService';\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport JobsList from \"../components/JobsList\";\nimport {useEffect, useState} from \"react\";\nimport {render} from \"react-dom\";\n\nasync function JobDetailPage() {\n\n    //const jobId = useParams();\n\n    //console.log(jobId);\n\n    //const JOBSEARCH_BASE_URL = \"http://localhost:8080/job\";\n\n    //const { data: jobData } = useQuery('job', () => JobService.getJobById(jobId));\n    //  const { data: jobData, isLoading: isLoadingJob} = useQuery('asdf',\n    //      async () => { await axios.get(\"http://localhost:8080/job/get/\" + jobId)\n    //                         .then(response => {\n    //                          console.log(response)\n    //                          return response;})})\n\n    //the below line was working\n    // const { data: jobDetail, isLoading: isLoadingJob } = useQuery('asdf',\n    //     async () => { await axios.get(\"http://localhost:8080/job/get/2\")\n    //         .then(res => {return res})});\n\n    // const jobDetail = await fetch(\"http://localhost:8080/job/get/\" + jobId);\n\n    // const jobDetail = isLoadingJob ? [] : jobData;\n    // let jobDetail;\n    //\n    // if(isLoadingJob) {\n    //     jobDetail = [];\n    // } else {\n    //     jobDetail = getData(jobData);\n    // }\n\n    //let result = axios.get(JOBSEARCH_BASE_URL + \"/get/\" + jobId)\n\n    // async function getData() {\n    //         jobData = await axios.get(JOBSEARCH_BASE_URL + \"/get/\" + jobId)\n    //         .then(response => {\n    //             console.log(response)\n    //             return response;\n    //         })\n    //         .catch(error => {\n    //             console.log(error)\n    //         })\n    // }\n\n    //let jobDetail;\n\n    // axios.get(\"http://localhost:8080/job/get/2\")\n    //     .then(response => response.json())\n    //     .then((data) => {\n    //         jobDetail = data;\n    //     });\n\n    // let jobDetail;\n    //\n    // useEffect(async () => {\n    //     jobDetail = axios.get(\"http://localhost:8080/job/get/2\")\n    //         .catch(() => {\n    //             console.log(\"fail\");\n    //         });\n    // })\n\n\n    //console.log(jobDetail);\n\n    // if (!jobDetail) {\n    //     return <div>Loading...</div>;\n    // }\n\n    //return <JobItem job={jobDetail}/>;\n\n    const [Posts, setPosts] = useState(null);\n\n    let renderPosts;\n    renderPosts = async () => {\n        try {\n            const res = await axios.get('http://localhost:8080/job/get/2');\n            const posts = res.data;\n\n            setPosts(posts);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n        const posts = Posts?.map((post, i) => (\n            <li key={i} className=\"list-group-item\">{post.text}</li>\n        ));\n\n        return (\n            <div>\n                <ul>\n                    {posts}\n                </ul>\n            </div>\n        );\n}\nexport default JobDetailPage;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,MAAM,QAAO,WAAW;AAAC;AAEjC,eAAeC,aAAa,GAAG;EAAA;EAE3B;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;EACA;EACA;;EAEA;;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAExC,IAAIK,WAAW;EACfA,WAAW,GAAG,YAAY;IACtB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,iCAAiC,CAAC;MAC9D,MAAMC,KAAK,GAAGF,GAAG,CAACG,IAAI;MAEtBL,QAAQ,CAACI,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB;EACJ,CAAC;EAEG,MAAMF,KAAK,GAAGL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEU,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAC7B;IAAY,SAAS,EAAC,iBAAiB;IAAA,UAAED,IAAI,CAACE;EAAI,GAAzCD,CAAC;IAAA;IAAA;IAAA;EAAA,QACb,CAAC;EAEF,oBACI;IAAA,uBACI;MAAA,UACKP;IAAK;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACH;AAElB;AAAC,GA/FcN,aAAa;AAAA,KAAbA,aAAa;AAgG5B,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}