{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oburn\\\\projects\\\\job-search-fe\\\\src\\\\pages\\\\JobDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\n//const jobId = useParams();\n\n//console.log(jobId);\n\n//const JOBSEARCH_BASE_URL = \"http://localhost:8080/job\";\n\n//const { data: jobData } = useQuery('job', () => JobService.getJobById(jobId));\n//  const { data: jobData, isLoading: isLoadingJob} = useQuery('asdf',\n//      async () => { await axios.get(\"http://localhost:8080/job/get/\" + jobId)\n//                         .then(response => {\n//                          console.log(response)\n//                          return response;})})\n\n//the below line was working\n// const { data: jobDetail, isLoading: isLoadingJob } = useQuery('asdf',\n//     async () => { await axios.get(\"http://localhost:8080/job/get/2\")\n//         .then(res => {return res})});\n\n//this code works without using react-query\n// function JobDetailPage() {\n//     const [jobTitle, setJobTitle] = useState(\"\");\n//\n//     useEffect(() => {\n//         axios.get(\"http://localhost:8080/job/get/2\")\n//             .then((response) => {\n//                 setJobTitle(response.data.title);\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//             });\n//     }, []);\n//\n//     return <div>{jobTitle}</div>;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobDetailPage() {\n  _s();\n  const {\n    isLoading,\n    error,\n    data: jobDetail\n  } = useQuery('jobDetail', () => axios('http://localhost:8080/job/get/2').then(res => res.data));\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: jobDetail.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n}\n_s(JobDetailPage, \"IX2g9w9bW18evdnZXFkse+ITP/g=\", false, function () {\n  return [useQuery];\n});\n_c = JobDetailPage;\nexport default JobDetailPage;\nvar _c;\n$RefreshReg$(_c, \"JobDetailPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useQuery","JobDetailPage","isLoading","error","data","jobDetail","then","res","message","title"],"sources":["C:/Users/oburn/projects/job-search-fe/src/pages/JobDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {useQuery} from \"react-query\";\n\n    //const jobId = useParams();\n\n    //console.log(jobId);\n\n    //const JOBSEARCH_BASE_URL = \"http://localhost:8080/job\";\n\n    //const { data: jobData } = useQuery('job', () => JobService.getJobById(jobId));\n    //  const { data: jobData, isLoading: isLoadingJob} = useQuery('asdf',\n    //      async () => { await axios.get(\"http://localhost:8080/job/get/\" + jobId)\n    //                         .then(response => {\n    //                          console.log(response)\n    //                          return response;})})\n\n    //the below line was working\n    // const { data: jobDetail, isLoading: isLoadingJob } = useQuery('asdf',\n    //     async () => { await axios.get(\"http://localhost:8080/job/get/2\")\n    //         .then(res => {return res})});\n\n\n//this code works without using react-query\n// function JobDetailPage() {\n//     const [jobTitle, setJobTitle] = useState(\"\");\n//\n//     useEffect(() => {\n//         axios.get(\"http://localhost:8080/job/get/2\")\n//             .then((response) => {\n//                 setJobTitle(response.data.title);\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//             });\n//     }, []);\n//\n//     return <div>{jobTitle}</div>;\n// }\n\nfunction JobDetailPage() {\n    const { isLoading, error, data: jobDetail } = useQuery('jobDetail', () =>\n        axios('http://localhost:8080/job/get/2').then((res) => res.data)\n    );\n\n    if (isLoading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    }\n\n    return <div>{jobDetail.title}</div>;\n}\n\nexport default JobDetailPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,aAAa;;AAEhC;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,SAASC,aAAa,GAAG;EAAA;EACrB,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC,IAAI,EAAEC;EAAU,CAAC,GAAGL,QAAQ,CAAC,WAAW,EAAE,MAChED,KAAK,CAAC,iCAAiC,CAAC,CAACO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACH,IAAI,CAAC,CACnE;EAED,IAAIF,SAAS,EAAE;IACX,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAChC;EAEA,IAAIC,KAAK,EAAE;IACP,oBAAO;MAAA,WAAK,SAAO,EAACA,KAAK,CAACK,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EAC5C;EAEA,oBAAO;IAAA,UAAMH,SAAS,CAACI;EAAK;IAAA;IAAA;IAAA;EAAA,QAAO;AACvC;AAAC,GAdQR,aAAa;EAAA,QAC4BD,QAAQ;AAAA;AAAA,KADjDC,aAAa;AAgBtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}