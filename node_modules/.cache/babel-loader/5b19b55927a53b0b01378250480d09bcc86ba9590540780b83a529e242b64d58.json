{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oburn\\\\projects\\\\job-search-fe\\\\src\\\\pages\\\\JobDetail.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from 'react';\nimport { useRouteLoaderData, json, redirect, defer, Await } from 'react-router-dom';\nimport JobItem from '../components/JobItem';\nimport JobsList from '../components/JobsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JobDetailPage() {\n  _s();\n  const {\n    job,\n    jobs\n  } = useRouteLoaderData('job-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: job,\n        children: loadedJob => /*#__PURE__*/_jsxDEV(JobItem, {\n          job: loadedJob\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: jobs,\n        children: loadedJobs => /*#__PURE__*/_jsxDEV(JobsList, {\n          jobs: loadedJobs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(JobDetailPage, \"+DBFxE9bhSL2T+HH/hQ9O/9miN0=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = JobDetailPage;\nexport default JobDetailPage;\nasync function loadJob(id) {\n  const response = await fetch('http://localhost:8080/job/getJob' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected job.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.job;\n  }\n}\nasync function loadJobs() {\n  const response = await fetch('http://localhost:8080/jobs');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch jobs.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch jobs.' }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: 'Could not fetch jobs.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.jobs;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.jobId;\n  return defer({\n    job: await loadJob(id),\n    jobs: loadJobs()\n  });\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const jobId = params.jobId;\n  const response = await fetch('http://localhost:8080/jobs/', {\n    method: request.method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(jobId)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete job.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/jobs');\n}\nvar _c;\n$RefreshReg$(_c, \"JobDetailPage\");","map":{"version":3,"names":["Suspense","useRouteLoaderData","json","redirect","defer","Await","JobItem","JobsList","JobDetailPage","job","jobs","textAlign","loadedJob","loadedJobs","loadJob","id","response","fetch","ok","message","status","resData","loadJobs","loader","request","params","jobId","action","method","headers","body","JSON","stringify"],"sources":["C:/Users/oburn/projects/job-search-fe/src/pages/JobDetail.js"],"sourcesContent":["import { Suspense } from 'react';\nimport {\n  useRouteLoaderData,\n  json,\n  redirect,\n  defer,\n  Await,\n} from 'react-router-dom';\n\nimport JobItem from '../components/JobItem';\nimport JobsList from '../components/JobsList';\n\nfunction JobDetailPage() {\n  const { job, jobs } = useRouteLoaderData('job-detail');\n\n  return (\n    <>\n      <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\n        <Await resolve={job}>\n          {(loadedJob) => <JobItem job={loadedJob} />}\n        </Await>\n      </Suspense>\n      <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\n        <Await resolve={jobs}>\n          {(loadedJobs) => <JobsList jobs={loadedJobs} />}\n        </Await>\n      </Suspense>\n    </>\n  );\n}\n\nexport default JobDetailPage;\n\nasync function loadJob(id) {\n  const response = await fetch('http://localhost:8080/job/getJob' + id);\n\n  if (!response.ok) {\n    throw json(\n      { message: 'Could not fetch details for selected job.' },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.job;\n  }\n}\n\nasync function loadJobs() {\n  const response = await fetch('http://localhost:8080/jobs');\n\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch jobs.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch jobs.' }), {\n    //   status: 500,\n    // });\n    throw json(\n      { message: 'Could not fetch jobs.' },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.jobs;\n  }\n}\n\nexport async function loader({ request, params }) {\n  const id = params.jobId;\n\n  return defer({\n    job: await loadJob(id),\n    jobs: loadJobs(),\n  });\n}\n\nexport async function action({ params, request }) {\n  const jobId = params.jobId;\n  const response = await fetch('http://localhost:8080/jobs/',{\n    method: request.method,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(jobId)\n  });\n\n  if (!response.ok) {\n    throw json(\n      { message: 'Could not delete job.' },\n      {\n        status: 500,\n      }\n    );\n  }\n  return redirect('/jobs');\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SACEC,kBAAkB,EAClBC,IAAI,EACJC,QAAQ,EACRC,KAAK,EACLC,KAAK,QACA,kBAAkB;AAEzB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAAC;AAAA;AAE9C,SAASC,aAAa,GAAG;EAAA;EACvB,MAAM;IAAEC,GAAG;IAAEC;EAAK,CAAC,GAAGT,kBAAkB,CAAC,YAAY,CAAC;EAEtD,oBACE;IAAA,wBACE,QAAC,QAAQ;MAAC,QAAQ,eAAE;QAAG,KAAK,EAAE;UAAEU,SAAS,EAAE;QAAS,CAAE;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAK;MAAA,uBACpE,QAAC,KAAK;QAAC,OAAO,EAAEF,GAAI;QAAA,UAChBG,SAAS,iBAAK,QAAC,OAAO;UAAC,GAAG,EAAEA;QAAU;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IACrC;MAAA;MAAA;MAAA;IAAA,QACC,eACX,QAAC,QAAQ;MAAC,QAAQ,eAAE;QAAG,KAAK,EAAE;UAAED,SAAS,EAAE;QAAS,CAAE;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAK;MAAA,uBACpE,QAAC,KAAK;QAAC,OAAO,EAAED,IAAK;QAAA,UACjBG,UAAU,iBAAK,QAAC,QAAQ;UAAC,IAAI,EAAEA;QAAW;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IACzC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA,gBACV;AAEP;AAAC,GAjBQL,aAAa;EAAA,QACEP,kBAAkB;AAAA;AAAA,KADjCO,aAAa;AAmBtB,eAAeA,aAAa;AAE5B,eAAeM,OAAO,CAACC,EAAE,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,GAAGF,EAAE,CAAC;EAErE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMhB,IAAI,CACR;MAAEiB,OAAO,EAAE;IAA4C,CAAC,EACxD;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACd,IAAI,EAAE;IACrC,OAAOmB,OAAO,CAACZ,GAAG;EACpB;AACF;AAEA,eAAea,QAAQ,GAAG;EACxB,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;EAE1D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,MAAMhB,IAAI,CACR;MAAEiB,OAAO,EAAE;IAAwB,CAAC,EACpC;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACd,IAAI,EAAE;IACrC,OAAOmB,OAAO,CAACX,IAAI;EACrB;AACF;AAEA,OAAO,eAAea,MAAM,OAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC9C,MAAMV,EAAE,GAAGU,MAAM,CAACC,KAAK;EAEvB,OAAOtB,KAAK,CAAC;IACXK,GAAG,EAAE,MAAMK,OAAO,CAACC,EAAE,CAAC;IACtBL,IAAI,EAAEY,QAAQ;EAChB,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeK,MAAM,QAAsB;EAAA,IAArB;IAAEF,MAAM;IAAED;EAAQ,CAAC;EAC9C,MAAME,KAAK,GAAGD,MAAM,CAACC,KAAK;EAC1B,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAC;IACzDW,MAAM,EAAEJ,OAAO,CAACI,MAAM;IACtBC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK;EAC5B,CAAC,CAAC;EAEF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMhB,IAAI,CACR;MAAEiB,OAAO,EAAE;IAAwB,CAAC,EACpC;MACEC,MAAM,EAAE;IACV,CAAC,CACF;EACH;EACA,OAAOjB,QAAQ,CAAC,OAAO,CAAC;AAC1B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}